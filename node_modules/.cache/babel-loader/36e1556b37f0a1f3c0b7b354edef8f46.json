{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/practice project/src/pages/QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport Comments from '../components/comments/Comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [// copied the DUMMY_QUOTES array from AllQuotes component\n{\n  id: 'q1',\n  author: 'Kartik',\n  text: 'Travelling around the would should be your major goal.'\n}, {\n  id: 'q2',\n  author: 'Radhika',\n  text: 'I am into adventure sports.'\n}, {\n  id: 'q3',\n  author: 'Akshat',\n  text: 'You should play on probabilities even if it wastes your time.'\n}, {\n  id: 'q4',\n  author: 'Ayushi',\n  text: 'Mujhse nhi ho payega ye sab, ho gya toh bhi I will ruin everything!'\n}, {\n  id: 'q5',\n  author: 'Priyal',\n  text: 'Pagal hai utkarsh, I know he wont text me saamne se!'\n}];\n\nconst QuoteDetail = props => {\n  _s();\n\n  const params = useParams();\n  DUMMY_QUOTES.find(quote => quote.id === params.quoteId); //checking for matching quote\n  // in the quotes array, later on we will do this on a backed server rather than a\n  // dummy data set.\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote Details Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: params.quoteId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["useParams","Route","Fragment","Comments","DUMMY_QUOTES","id","author","text","QuoteDetail","props","params","find","quote","quoteId"],"sources":["/Users/kartik/Desktop/practice project/src/pages/QuoteDetails.js"],"sourcesContent":["import { useParams, Route } from 'react-router-dom'; \nimport { Fragment } from 'react';\n\nimport Comments from '../components/comments/Comments'; \n\nconst DUMMY_QUOTES = [ // copied the DUMMY_QUOTES array from AllQuotes component\n    {\n        id: 'q1',\n        author: 'Kartik',\n        text: 'Travelling around the would should be your major goal.'\n    },\n    {\n        id: 'q2',\n        author: 'Radhika',\n        text: 'I am into adventure sports.'\n    },\n    {\n        id: 'q3',\n        author: 'Akshat',\n        text: 'You should play on probabilities even if it wastes your time.'\n    },\n    {\n        id: 'q4',\n        author: 'Ayushi',\n        text: 'Mujhse nhi ho payega ye sab, ho gya toh bhi I will ruin everything!'\n    },\n    {\n        id: 'q5',\n        author: 'Priyal',\n        text: 'Pagal hai utkarsh, I know he wont text me saamne se!'\n    }\n];\n\nconst QuoteDetail = (props) => {\n\n    const params = useParams();\n\n    DUMMY_QUOTES.find(quote => quote.id === params.quoteId); //checking for matching quote\n    // in the quotes array, later on we will do this on a backed server rather than a\n    // dummy data set.\n\n    return (\n        <Fragment>\n            <h1>Quote Details Page</h1>\n            <p>{params.quoteId}</p>\n\n            <Route path={`/quotes/${params.quoteId}/comments`}>\n                <Comments />\n            </Route>    \n        </Fragment>\n        \n    );\n};\n\nexport default QuoteDetail;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,kBAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,MAAMC,YAAY,GAAG,CAAE;AACnB;EACIC,EAAE,EAAE,IADR;EAEIC,MAAM,EAAE,QAFZ;EAGIC,IAAI,EAAE;AAHV,CADiB,EAMjB;EACIF,EAAE,EAAE,IADR;EAEIC,MAAM,EAAE,SAFZ;EAGIC,IAAI,EAAE;AAHV,CANiB,EAWjB;EACIF,EAAE,EAAE,IADR;EAEIC,MAAM,EAAE,QAFZ;EAGIC,IAAI,EAAE;AAHV,CAXiB,EAgBjB;EACIF,EAAE,EAAE,IADR;EAEIC,MAAM,EAAE,QAFZ;EAGIC,IAAI,EAAE;AAHV,CAhBiB,EAqBjB;EACIF,EAAE,EAAE,IADR;EAEIC,MAAM,EAAE,QAFZ;EAGIC,IAAI,EAAE;AAHV,CArBiB,CAArB;;AA4BA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAE3B,MAAMC,MAAM,GAAGV,SAAS,EAAxB;EAEAI,YAAY,CAACO,IAAb,CAAkBC,KAAK,IAAIA,KAAK,CAACP,EAAN,KAAaK,MAAM,CAACG,OAA/C,EAJ2B,CAI8B;EACzD;EACA;;EAEA,oBACI,QAAC,QAAD;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAIH,MAAM,CAACG;IAAX;MAAA;MAAA;MAAA;IAAA,QAFJ,eAII,QAAC,KAAD;MAAO,IAAI,EAAG,WAAUH,MAAM,CAACG,OAAQ,WAAvC;MAAA,uBACI,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAnBD;;GAAML,W;UAEaR,S;;;KAFbQ,W;AAqBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}