{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/practice project/src/components/quotes/QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  // function for sorting the quote list\n  // this function takes in two arguments, 'the quotes array' and a boolean value\n  // that tells if the order should be in ascending or descending\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const isSortedQuotes = sortQuotes(props.quotes, isSortingAscending); // keeping the array\n  // of sorted quotes in this variable 'isSortedQuotes' \n\n  const changeSortingHandler = () => {\n    history.push('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: isSortedQuotes.map(quote =>\n      /*#__PURE__*/\n      // using the isSorted quotes array to display the \n      // sorted quotes on the application screen\n      _jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortingAscending","get","isSortedQuotes","changeSortingHandler","push","sorting","list","map","quote","author","text"],"sources":["/Users/kartik/Desktop/practice project/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from 'react';\nimport { useHistory, useLocation  } from 'react-router-dom'; \n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => { // function for sorting the quote list\n  // this function takes in two arguments, 'the quotes array' and a boolean value\n  // that tells if the order should be in ascending or descending\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\n\nconst QuoteList = (props) => {\n\n  const history = useHistory();\n  const location = useLocation(); \n\n  const queryParams =  new URLSearchParams(location.search); \n\n  const isSortingAscending = queryParams.get('sort') === 'asc'; \n\n  const isSortedQuotes = sortQuotes(props.quotes, isSortingAscending); // keeping the array\n  // of sorted quotes in this variable 'isSortedQuotes' \n\n  const changeSortingHandler = () => { \n    history.push('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'));\n\n  };\n\n  return (\n    <Fragment>\n\n      <div className={classes.sorting}>\n\n        <button onClick={changeSortingHandler}>\n          Sort { isSortingAscending ? 'Descending' : 'Ascending'} \n        </button>\n\n      </div>\n\n      <ul className={classes.list}>\n        \n        {isSortedQuotes.map((quote) => ( // using the isSorted quotes array to display the \n        // sorted quotes on the application screen\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAyC,kBAAzC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;EAAE;EAC1C;EACA;EACA,OAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;IACrC,IAAIH,SAAJ,EAAe;MACb,OAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD,CAFD,MAEO;MACL,OAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACD;EACF,CANM,CAAP;AAOD,CAVD;;AAaA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAE3B,MAAMC,OAAO,GAAGb,UAAU,EAA1B;EACA,MAAMc,QAAQ,GAAGb,WAAW,EAA5B;EAEA,MAAMc,WAAW,GAAI,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAArB;EAEA,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA4B,KAAvD;EAEA,MAAMC,cAAc,GAAGhB,UAAU,CAACQ,KAAK,CAACP,MAAP,EAAea,kBAAf,CAAjC,CAT2B,CAS0C;EACrE;;EAEA,MAAMG,oBAAoB,GAAG,MAAM;IACjCR,OAAO,CAACS,IAAR,CAAa,mBAAmBJ,kBAAkB,GAAG,MAAH,GAAY,KAAjD,CAAb;EAED,CAHD;;EAKA,oBACE,QAAC,QAAD;IAAA,wBAEE;MAAK,SAAS,EAAEf,OAAO,CAACoB,OAAxB;MAAA,uBAEE;QAAQ,OAAO,EAAEF,oBAAjB;QAAA,oBACSH,kBAAkB,GAAG,YAAH,GAAkB,WAD7C;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA,QAFF,eAUE;MAAI,SAAS,EAAEf,OAAO,CAACqB,IAAvB;MAAA,UAEGJ,cAAc,CAACK,GAAf,CAAoBC,KAAD;MAAA;MAAa;MACjC;MACE,QAAC,SAAD;QAEE,EAAE,EAAEA,KAAK,CAAChB,EAFZ;QAGE,MAAM,EAAEgB,KAAK,CAACC,MAHhB;QAIE,IAAI,EAAED,KAAK,CAACE;MAJd,GACOF,KAAK,CAAChB,EADb;QAAA;QAAA;QAAA;MAAA,QAFD;IAFH;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CA1CD;;GAAMC,S;UAEYX,U,EACCC,W;;;KAHbU,S;AA4CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}