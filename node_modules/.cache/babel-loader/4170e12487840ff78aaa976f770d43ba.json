{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/practice project/src/pages/QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, NavLink, useRouteMatch } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport { useEffect } from 'react'; // importing the useEffect hook for side effect\n\nimport useHttp from '../hooks/use-http'; // importing the useHttp custom hook\n\nimport { getSingleQuote } from '../lib/api'; //importing the getSingleQuote function \n\nimport LoadingSpinner from '../components/UI/LoadingSpinner'; // importing the Loading\n// spinner from the UI folder\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = props => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params; // destructuring the value of quoteId from params so that\n  // we can use this quoteId as an argument in sendRequest function in useEffect hook \n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true); // using the useHttp custom hook to send a request to the server to get a single quote\n\n  useEffect(() => {\n    // using the useEffect hook to send a request whenever this component\n    // is rendered\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    // checking if the status is pending, then we return the \n    // loading spinner \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    // returning the error if the status that we receive is error\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!loadedQuote) {\n    // giving the output as 'No Quote Found' if we don't get any quote\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \" No Quote Found \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: data.text,\n      author: data.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Comment Section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"cv1Iusq+I4KeC6i/PAPIiViCiFg=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["useParams","Route","NavLink","useRouteMatch","Fragment","HighlightedQuote","Comments","useEffect","useHttp","getSingleQuote","LoadingSpinner","QuoteDetail","props","match","params","quoteId","sendRequest","status","data","loadedQuote","error","text","author","path","url"],"sources":["/Users/kartik/Desktop/practice project/src/pages/QuoteDetails.js"],"sourcesContent":["import { useParams, Route, NavLink, useRouteMatch } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments'; \n\nimport { useEffect } from 'react'; // importing the useEffect hook for side effect\nimport useHttp from '../hooks/use-http'; // importing the useHttp custom hook\nimport { getSingleQuote } from '../lib/api'; //importing the getSingleQuote function \nimport LoadingSpinner from '../components/UI/LoadingSpinner'; // importing the Loading\n// spinner from the UI folder\n\nconst QuoteDetail = (props) => {\n\n    const match = useRouteMatch();  \n    const params = useParams();\n\n    const { quoteId } = params;// destructuring the value of quoteId from params so that\n    // we can use this quoteId as an argument in sendRequest function in useEffect hook \n\n    const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\n    // using the useHttp custom hook to send a request to the server to get a single quote\n\n    useEffect(() => { // using the useEffect hook to send a request whenever this component\n        // is rendered\n        sendRequest(quoteId);\n    }, [sendRequest, quoteId]);\n\n    if(status === 'pending'){ // checking if the status is pending, then we return the \n        // loading spinner \n        return (\n            <div className=\"centered\">\n                <LoadingSpinner />\n            </div>\n        );\n    }\n\n    if(error){ // returning the error if the status that we receive is error\n        return(\n            <p className='centered'>{error}</p>\n        );\n    }\n\n    if(!loadedQuote){ // giving the output as 'No Quote Found' if we don't get any quote\n        return <p className=\"centered\"> No Quote Found </p>;\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote \n                text = {data.text}\n                author = {data.author}\n            />\n\n            <Route path={match.path} exact>\n                <div className='centered'>\n                    <NavLink className='btn--flat' to={`${match.url}/comments`}>\n                        <p>Comment Section</p>\n                    </NavLink>\n                </div>\n            </Route>\n\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>    \n        </Fragment>\n        \n    );\n};\n\nexport default QuoteDetail;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,aAApC,QAAyD,kBAAzD;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,SAASC,SAAT,QAA0B,OAA1B,C,CAAmC;;AACnC,OAAOC,OAAP,MAAoB,mBAApB,C,CAAyC;;AACzC,SAASC,cAAT,QAA+B,YAA/B,C,CAA6C;;AAC7C,OAAOC,cAAP,MAA2B,iCAA3B,C,CAA8D;AAC9D;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAE3B,MAAMC,KAAK,GAAGV,aAAa,EAA3B;EACA,MAAMW,MAAM,GAAGd,SAAS,EAAxB;EAEA,MAAM;IAAEe;EAAF,IAAcD,MAApB,CAL2B,CAKA;EAC3B;;EAEA,MAAM;IAACE,WAAD;IAAcC,MAAd;IAAsBC,IAAI,EAAEC,WAA5B;IAAyCC;EAAzC,IAAkDZ,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAA/D,CAR2B,CAS3B;;EAEAF,SAAS,CAAC,MAAM;IAAE;IACd;IACAS,WAAW,CAACD,OAAD,CAAX;EACH,CAHQ,EAGN,CAACC,WAAD,EAAcD,OAAd,CAHM,CAAT;;EAKA,IAAGE,MAAM,KAAK,SAAd,EAAwB;IAAE;IACtB;IACA,oBACI;MAAK,SAAS,EAAC,UAAf;MAAA,uBACI,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;EAED,IAAGG,KAAH,EAAS;IAAE;IACP,oBACI;MAAG,SAAS,EAAC,UAAb;MAAA,UAAyBA;IAAzB;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;;EAED,IAAG,CAACD,WAAJ,EAAgB;IAAE;IACd,oBAAO;MAAG,SAAS,EAAC,UAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACI,QAAC,QAAD;IAAA,wBACI,QAAC,gBAAD;MACI,IAAI,EAAID,IAAI,CAACG,IADjB;MAEI,MAAM,EAAIH,IAAI,CAACI;IAFnB;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI,QAAC,KAAD;MAAO,IAAI,EAAET,KAAK,CAACU,IAAnB;MAAyB,KAAK,MAA9B;MAAA,uBACI;QAAK,SAAS,EAAC,UAAf;QAAA,uBACI,QAAC,OAAD;UAAS,SAAS,EAAC,WAAnB;UAA+B,EAAE,EAAG,GAAEV,KAAK,CAACW,GAAI,WAAhD;UAAA,uBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QANJ,eAcI,QAAC,KAAD;MAAO,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,WAA3B;MAAA,uBACI,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAdJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH,CAxDD;;GAAMZ,W;UAEYR,a,EACCH,S,EAKyCQ,O;;;KARtDG,W;AA0DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}