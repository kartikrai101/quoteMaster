[{"/Users/kartik/Desktop/practice project/src/index.js":"1","/Users/kartik/Desktop/practice project/src/App.js":"2","/Users/kartik/Desktop/practice project/src/pages/QuoteDetails.js":"3","/Users/kartik/Desktop/practice project/src/pages/AllQuotes.js":"4","/Users/kartik/Desktop/practice project/src/pages/NewQuote.js":"5","/Users/kartik/Desktop/practice project/src/components/comments/Comments.js":"6","/Users/kartik/Desktop/practice project/src/components/comments/NewCommentForm.js":"7","/Users/kartik/Desktop/practice project/src/components/layout/Layout.js":"8","/Users/kartik/Desktop/practice project/src/components/layout/MainNavigation.js":"9","/Users/kartik/Desktop/practice project/src/components/quotes/QuoteList.js":"10","/Users/kartik/Desktop/practice project/src/components/quotes/QuoteItem.js":"11","/Users/kartik/Desktop/practice project/src/components/quotes/QuoteForm.js":"12","/Users/kartik/Desktop/practice project/src/components/UI/Card.js":"13","/Users/kartik/Desktop/practice project/src/components/UI/LoadingSpinner.js":"14","/Users/kartik/Desktop/practice project/src/components/quotes/HighlightedQuote.js":"15","/Users/kartik/Desktop/practice project/src/pages/NotFound.js":"16","/Users/kartik/Desktop/practice project/src/lib/api.js":"17","/Users/kartik/Desktop/practice project/src/hooks/use-http.js":"18","/Users/kartik/Desktop/practice project/src/components/quotes/NoQuotesFound.js":"19"},{"size":389,"mtime":1654757121958,"results":"20","hashOfConfig":"21"},{"size":1390,"mtime":1655279673296,"results":"22","hashOfConfig":"21"},{"size":2439,"mtime":1655203379221,"results":"23","hashOfConfig":"21"},{"size":1595,"mtime":1655201146752,"results":"24","hashOfConfig":"21"},{"size":1690,"mtime":1655199095884,"results":"25","hashOfConfig":"21"},{"size":647,"mtime":1616596573000,"results":"26","hashOfConfig":"21"},{"size":913,"mtime":1655204127078,"results":"27","hashOfConfig":"21"},{"size":748,"mtime":1654829419554,"results":"28","hashOfConfig":"21"},{"size":974,"mtime":1654828664889,"results":"29","hashOfConfig":"21"},{"size":1766,"mtime":1655190666234,"results":"30","hashOfConfig":"21"},{"size":616,"mtime":1654836989692,"results":"31","hashOfConfig":"21"},{"size":2074,"mtime":1655034212254,"results":"32","hashOfConfig":"21"},{"size":156,"mtime":1616596573000,"results":"33","hashOfConfig":"21"},{"size":167,"mtime":1616596573000,"results":"34","hashOfConfig":"21"},{"size":270,"mtime":1616596573000,"results":"35","hashOfConfig":"21"},{"size":162,"mtime":1654838755392,"results":"36","hashOfConfig":"21"},{"size":2209,"mtime":1655191468175,"results":"37","hashOfConfig":"21"},{"size":1211,"mtime":1655190970774,"results":"38","hashOfConfig":"21"},{"size":477,"mtime":1655201860788,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"3er3av",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/kartik/Desktop/practice project/src/index.js",[],["81","82"],"/Users/kartik/Desktop/practice project/src/App.js",[],"/Users/kartik/Desktop/practice project/src/pages/QuoteDetails.js",[],"/Users/kartik/Desktop/practice project/src/pages/AllQuotes.js",[],"/Users/kartik/Desktop/practice project/src/pages/NewQuote.js",[],"/Users/kartik/Desktop/practice project/src/components/comments/Comments.js",[],"/Users/kartik/Desktop/practice project/src/components/comments/NewCommentForm.js",["83","84"],"import { useRef } from 'react';\n\nimport useHttp from '../../hooks/use-http'; // importing the useHttp hook \nimport { addComment } from '../../lib/api'; // importing the addComment function from api.js\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","/Users/kartik/Desktop/practice project/src/components/layout/Layout.js",[],"/Users/kartik/Desktop/practice project/src/components/layout/MainNavigation.js",[],"/Users/kartik/Desktop/practice project/src/components/quotes/QuoteList.js",["85"],"import { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch  } from 'react-router-dom';// importing the\n// useRouteMatch hook \n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => { \n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\n\nconst QuoteList = (props) => {\n\n  const match = useRouteMatch(); // defining the match object from useRouteMatch hook\n  const history = useHistory();\n  const location = useLocation(); \n\n  const queryParams =  new URLSearchParams(location.search); \n\n  const isSortingAscending = queryParams.get('sort') === 'asc'; \n\n  const isSortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => { \n    // another way of pushing the path inside the history object so that the url becomes\n    // the one that we just pushed\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    });\n\n    //history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}`);\n\n  };\n\n  return (\n    <Fragment>\n\n      <div className={classes.sorting}>\n\n        <button onClick={changeSortingHandler}>\n          Sort { isSortingAscending ? 'Descending' : 'Ascending'} \n        </button>\n\n      </div>\n\n      <ul className={classes.list}>\n        \n        {isSortedQuotes.map((quote) => ( \n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","/Users/kartik/Desktop/practice project/src/components/quotes/QuoteItem.js",[],"/Users/kartik/Desktop/practice project/src/components/quotes/QuoteForm.js",[],"/Users/kartik/Desktop/practice project/src/components/UI/Card.js",[],"/Users/kartik/Desktop/practice project/src/components/UI/LoadingSpinner.js",[],"/Users/kartik/Desktop/practice project/src/components/quotes/HighlightedQuote.js",[],"/Users/kartik/Desktop/practice project/src/pages/NotFound.js",[],"/Users/kartik/Desktop/practice project/src/lib/api.js",[],"/Users/kartik/Desktop/practice project/src/hooks/use-http.js",[],"/Users/kartik/Desktop/practice project/src/components/quotes/NoQuotesFound.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":15},{"ruleId":"90","severity":1,"message":"94","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":20},{"ruleId":"90","severity":1,"message":"95","line":21,"column":9,"nodeType":"92","messageId":"93","endLine":21,"endColumn":14},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'useHttp' is defined but never used.","Identifier","unusedVar","'addComment' is defined but never used.","'match' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]